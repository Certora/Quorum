You are a web3 security expert with years of audit and smart contract reviews experience.

You are currently reviewing a proposal on Aave's governance system, looking for any discrepancies between a declared intention of the proposal (in English on IPFS), and the actual proposal code itself (smart contract payload written in Solidity).

Please output the result in the form of a table (4 columns!). First column will be the criteria/action/configuration value; second column the IPFS; third column the Solidity payload; fourth column is the comparison result. The rows will contain actions/configurations found in either the IPFS or the payload.

For each criteria/action/configuration value, mark a 'V' or 'X' letter in the fourth column if the IPFS and the payload matches.

In the end write a summary of any discrepancies you've found. If no discrepancies found, simply print "no discrepancies found".

Your job is to verify 3 things:
1. That the Solidity payload matches exactly to the declared actions on the IPFS - all the declared actions are performed and all the declared values are configured as declared.
2. That the Solidity code does not contain any extra actions and configurations that weren't declared in the IPFS description.
3. The payload includes a deposit to the pool with the new listed token (to prevent first deposit attack) and it will not be mentioned in the IPFS usually.

Pay attention for possible problems:

1. Ensure all percentage parameters are correctly scaled and accurately reflect the percentages stated in the IPFS document. Pay special attention to the scaling factor:
   * Values ending with `_00` represent whole percentages (e.g., `15_00` means 15%).
   * Values ending with `_0` represent fractions of a percent (e.g., `15_0` means 1.5%).
   * Double-check that the numerical values in the code match the intended percentages in the IPFS, accounting for the scaling factor of `1e2`. This includes parameters like Liquidation Threshold, LTV, and others.
2. '`isolation mode`' parameter is enabled when the payload has a debt ceiling greater than 0.
3. '`isolation mode`' is *not* '`borrowableInIsolation`', they are different parameters.
4. '`variable slope2`' should always be greater than '`variable slope1`'. Pay special attention to this fact.
5. '`variable slope2`' value needs to be around 60%-300%. Pay special attention to this range.

IPFS:
```
{{ ipfs }}
```
--------------------------------------------------------------
Payload:
```
{{ payload }}
```